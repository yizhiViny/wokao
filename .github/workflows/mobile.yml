name: Mobile
on: workflow_dispatch
jobs:
  Android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Restore Existing Build Cache
        uses: actions/cache@main
        with:
          key: cache-build-android
          path: |
            .haxelib/
            ~/.gradle/
            export/release/linux/haxe/
            export/release/linux/obj/
          restore-keys: |
            cache-build-android
      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e
      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib --quiet install hmm
          haxelib run hmm install --quiet
      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Compile
        run: haxelib run lime build android -final
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni
      - name: Clear Existing Cache
        uses: actions/github-script@main
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-build-android") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
      - name: Upload New Cache
        uses: actions/cache@main
        with:
          key: cache-build-android
          path: |
            .haxelib/
            ~/.gradle/
            export/release/linux/haxe/
            export/release/linux/obj/
          restore-keys: |
            cache-build-android
      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
  iOS:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib --quiet install hmm
          haxelib run hmm install --quiet
      - name: Compile
        run: haxelib run lime build ios -final
      - name: Make Ipa
        run: |
          cd export/release/ios/build/Release-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r CDEV-Engine.ipa Payload
      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error
